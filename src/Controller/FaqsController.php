<?php
declare(strict_types=1);

namespace App\Controller;


use App\Model\Entity\Staff;
use App\Model\Table\StaffsTable;
use Cake\Core\App;
use Cake\Datasource\ResultSetInterface;
use Cake\Mailer\Mailer;
use Cake\ORM\TableRegistry;
use Cake\Utility\Security;
use mysql_xdevapi\Table;


/**
 * Staffs Controller
 * @property \App\Model\Table\StaffsTable $Staffs
 * @property \App\Model\Table\SolutionsTable $Solutions
 *  @property \App\Model\Table\TicketsTable $Tickets
 * @property \App\Model\Table\CategoriesTable $Categories
 * @method Staff[]|ResultSetInterface paginate($object = null, array $settings = [])
 *

 */
class FaqsController extends AppController
{
    public function initialize(): void
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->Solutions = $this->fetchTable('Solutions');
        $this->Tickets = $this->fetchTable('Tickets');
    }

    /**
     * Index method
     *
     * @return \Cake\Http\Response|null|void Renders view
     */


    public function general()
    {
        $this->viewBuilder()->setLayout('userdefault');
        $this->paginate = ['contain' => 'Faqs'];
        $solutions = $this->Solutions->find()->all();
        $key1 = $this->request->getQuery('key1');
        $key1 = (int)$key1;
//dd($key1);
        if ($key1){
            $query = $this->Solutions->find('all')->where(['category_id'=> $key1]);
        }
        else{
            $query = $this->Solutions->find()->all();
        }
//        dd($query->toArray());
        $solutions = $query;
        $category = $this->Tickets->Categories->find('list')->all();
        $this->set(compact('solutions','category'));
    }

    public function submitedTicket()
    {
        $this->viewBuilder()->setLayout('userdefault');

        $this->paginate = [
            'contain' => ['Status', 'Staffs'],
        ];
        $key = $this->request->getQuery('key');
        if ($key) {
            $query = $this->Tickets->find('all')->where(['username LIKE' => '%' . $key . '%']);

        } else {
            $query = $this->Tickets->find()->all();
        }

//        $staffs = $this->paginate($query, ['limit' => '20']);
//        $staffs = $this->paginate($this->Staffs);
//        dd($this->paginate($this->Staffs->find()));
        $tickets = $this->paginate($this->Tickets, ['limit' => 10]);

//        dd([$staff->all(), $this->paginate($staff)]);
        $this->set(compact('tickets'));
    }
    public function bank()
    {
        $this->viewBuilder()->setLayout('userdefault');
        $this->paginate = ['contain' => 'Solutions', 'Categories'];

        $solutions = $this->Solutions->find()->where(['category_id' => 1]);
//        dd($solutions);
//        if ($this->request->is('post')) {
//            $this->redirect('staffs/faq');
//        }
        $this->set(compact('solutions'));
    }

    public function it()
    {
        $this->viewBuilder()->setLayout('userdefault');
        $this->paginate = ['contain' => 'Solutions', 'Categories'];

        $solutions = $this->Solutions->find()->where(['category_id' => 2]);
//        dd($solutions);
//        if ($this->request->is('post')) {
//            $this->redirect('staffs/faq');
//        }
        $this->set(compact('solutions'));
    }

    public function school()
    {
        $this->viewBuilder()->setLayout('userdefault');
        $this->paginate = ['contain' => 'Solutions', 'Categories'];

        $solutions = $this->Solutions->find()->where(['category_id' => 3]);
//        dd($solutions);
//        if ($this->request->is('post')) {
//            $this->redirect('staffs/faq');
//        }
        $this->set(compact('solutions'));
    }

    public function ticketForm()
    {
        $this->viewBuilder()->setLayout('ajax');
        $data = $this->getRequest()->getData();
        $data['status_id'] = 1;
        $data['staff_id'] = 64;
        $data['submit_by'] = $this->Auth->user('id');

        $ticket = $this->Tickets->newEmptyEntity();
        if ($this->request->is('post')) {
            $ticket = $this->Tickets->patchEntity($ticket, $data);
//            dd($ticket);
            if ($this->Tickets->save($ticket)) {
                $this->Flash->success(__('The ticket has been saved.'));
                $this->submitTicketAlert($ticket['id']);


                return $this->redirect(['action' => 'general']);
            }
            $this->Flash->error(__('The ticket could not be saved. Please, try again.'));
        }
        $categories = $this->Tickets->Categories->find('list', ['limit' => 200])->all();
        $this->set(compact('ticket', 'categories'));
    }

    public function view($id = null)
    {
        $ticket = $this->Tickets->get($id, [
            'contain' => ['Status','Staffs'],
        ]);
        $this->set(compact('ticket'));
        return $this->redirect(['controller'=>'Reply','action'=>'index',$id]);
    }



//    for submitted tickets
    public function edit($id = null)
    {
        $ticket = $this->Tickets->get($id, [
            'contain' => ['Status','Staffs'],
        ]);
        if ($this->request->is(['patch', 'post', 'put'])) {
            $ticket = $this->Tickets->patchEntity($ticket, $this->request->getData());
            if ($this->Tickets->save($ticket)) {
                $this->Flash->success(__('The ticket has been saved.'));

                return $this->redirect(['action' => 'index']);
            }
            $this->Flash->error(__('The ticket could not be saved. Please, try again.'));
        }
        $staffs = $this->Tickets->Staffs->find('list', ['limit' => 200])->all();
        $status = $this->Tickets->Status->find('list', ['limit' => 200])->all();

        $this->set(compact('ticket', 'staffs','status'));
    }

    public function submitTicketAlert($id){
        $user_id = $this->Tickets->get($id);
        $user = $this->Tickets->Staffs->get($user_id['submit_by']);

//            dd($user);
        $mailer = new Mailer();
        $mailer->setTransport('gmail');
        $mailer
            ->setTo('rathmuny85@gmail.com')
            ->setEmailFormat('html')
            ->setSubject('Help Desk_Submit Notification ðŸ””')
            ->setViewVars(['name'=>$user->staffName])

            ->viewBuilder()
                ->setTemplate('submitTicketAlert');

        if ($mailer->deliver()) {
            $this->Flash->success('Submit notification has been sent to admin email');
        }
    }

}

